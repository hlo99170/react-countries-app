{"version":3,"sources":["countries.js","App.js","reportWebVitals.js","index.js"],"names":["countryList","destination","list","App","props","state","value","str","showResults","handleChange","bind","handleSubmit","event","this","setState","target","preventDefault","code","toUpperCase","index","i","length","s","concat","onSubmit","type","onChange","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAGaA,EAAc,CACvB,CACIC,YAAa,MACbC,KAAM,CAAC,MAAO,QAElB,CACID,YAAa,MACbC,KAAM,CAAC,QAEX,CACID,YAAa,MACbC,KAAM,CAAC,MAAO,QAElB,CACID,YAAa,MACbC,KAAM,CAAC,MAAO,MAAO,QAEzB,CACID,YAAa,MACbC,KAAM,CAAC,MAAO,MAAO,QAEzB,CACID,YAAa,MACbC,KAAM,CAAC,MAAO,MAAO,MAAO,QAEhC,CACID,YAAa,MACbC,KAAM,CAAC,MAAO,MAAO,MAAM,QAE/B,CACID,YAAa,MACbC,KAAM,CAAC,MAAO,MAAO,MAAM,MAAO,QAEtC,CACID,YAAa,MACbC,KAAM,CAAC,MAAO,MAAO,MAAM,MAAO,MAAO,QAE7C,CACID,YAAa,MACbC,KAAM,CAAC,MAAO,MAAO,MAAM,MAAO,MAAO,MAAO,S,OCvCnCC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,MAAO,GACPC,IAAK,GACLC,aAAa,GAGf,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAVH,E,gDAanB,SAAaE,GACXC,KAAKC,SAAS,CAACR,MAAOM,EAAMG,OAAOT,U,0BAIrC,SAAaM,GACXC,KAAKC,SAAS,CAACN,aAAa,IAC5BI,EAAMI,iBAIN,IAHA,IAAIC,EAAOJ,KAAKR,MAAMC,MAAMY,cAExBC,GAAS,EACJC,EAAI,EAAGA,EAAIpB,EAAYqB,OAAQD,IAClCH,IAASjB,EAAYoB,GAAGnB,cAC1BkB,EAAQC,GAIZ,IAAe,IAAXD,EACFN,KAAKC,SAAS,CAACP,IAAK,yCAGjB,CACH,IAAIe,EAAI,GACR,IAAKF,EAAI,EAAGA,EAAIpB,EAAYmB,GAAOjB,KAAKmB,OAAQD,IAC5CE,EAAIA,EAAEC,OAAOvB,EAAYmB,GAAOjB,KAAKkB,IACjCA,EAAIpB,EAAYmB,GAAOjB,KAAKmB,OAAS,IACvCC,EAAIA,EAAEC,OAAO,OAEnBV,KAAKC,SAAS,CAACP,IAAKe,O,oBAIxB,WACE,OACE,gCACE,uBAAME,SAAUX,KAAKF,aAArB,UACE,qEACA,uBAAOc,KAAK,OAAOnB,MAAOO,KAAKR,MAAMC,MAAOoB,SAAUb,KAAKJ,eAC3D,uBAAOgB,KAAK,SAASnB,MAAM,cAG3BO,KAAKR,MAAMG,aACX,gCACE,2CACA,4BACCK,KAAKR,MAAME,gB,GA3DSoB,IAAMC,WCSxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.284749bb.chunk.js","sourcesContent":["/*Description: This file contains the JSON array of the data for each North American country. \r\nEach object contains the desitnation and the list of countries on the route from USA. */\r\n\r\nexport const countryList = [\r\n    {\r\n        destination: \"CAN\",\r\n        list: [\"USA\", \"CAN\"],\r\n    },\r\n    {\r\n        destination: \"USA\",\r\n        list: [\"USA\"],\r\n    },\r\n    {\r\n        destination: \"MEX\",\r\n        list: [\"USA\", \"MEX\"],\r\n    },\r\n    {\r\n        destination: \"BLZ\",\r\n        list: [\"USA\", \"MEX\", \"BLZ\"],\r\n    },\r\n    {\r\n        destination: \"GTM\",\r\n        list: [\"USA\", \"MEX\", \"GTM\"],\r\n    },\r\n    {\r\n        destination: \"SLV\",\r\n        list: [\"USA\", \"MEX\", \"GTM\", \"SLV\"],\r\n    },\r\n    {\r\n        destination: \"HND\",\r\n        list: [\"USA\", \"MEX\", \"GTM\",\"HND\"],\r\n    },\r\n    {\r\n        destination: \"NIC\",\r\n        list: [\"USA\", \"MEX\", \"GTM\",\"HND\", \"NIC\"],\r\n    },\r\n    {\r\n        destination: \"CRI\",\r\n        list: [\"USA\", \"MEX\", \"GTM\",\"HND\", \"NIC\", \"CRI\"],\r\n    },\r\n    {\r\n        destination: \"PAN\",\r\n        list: [\"USA\", \"MEX\", \"GTM\",\"HND\", \"NIC\", \"CRI\", \"PAN\"],\r\n    }\r\n];","import React from 'react';\nimport { countryList } from './countries';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    //Initialize state of class\n    this.state = {\n      value: '', //string inputted by user\n      str: '', //error message or list of countries from JSON file\n      showResults: false //boolean that shows results div when true\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  //Change state value when the input text is changed\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  //Handle input, update state values, and show results when submit button is clicked\n  handleSubmit(event) {\n    this.setState({showResults: true}); //Display results\n    event.preventDefault(); //Prevents user from submitting blank value\n    var code = this.state.value.toUpperCase(); //Converts input to uppercase to match destinations \n    //Find index of country code in JSON file\n    var index = -1;\n    for (var i = 0; i < countryList.length; i++) {\n      if (code === countryList[i].destination) {\n        index = i;\n      }\n    }\n    //Update state string error message if country code is not found\n    if (index === -1) {\n      this.setState({str: \"Invalid input. Please try again.\"});\n    }\n    //Update state string to the list of countries for the code given\n    else {\n      var s = \"\";\n      for (i = 0; i < countryList[index].list.length; i++) {\n          s = s.concat(countryList[index].list[i]);\n          if (i < countryList[index].list.length - 1) \n            s = s.concat(\", \");\n      }\n      this.setState({str: s});\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <p>Plase enter a 3-digit country code: </p>\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange}/>\n          <input type=\"submit\" value=\"Submit\"/>\n        </form>\n        \n        {(this.state.showResults && \n          <div>\n            <h3>Results: </h3>\n            <p>\n            {this.state.str}\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}